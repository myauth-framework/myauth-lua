lua_shared_dict prometheus_metrics 10M;
lua_package_path '/app/libs/?.lua;/app/configs/?.lua;;';

init_worker_by_lua_block {
	
	prometheus = require("prometheus").init("prometheus_metrics")

	local config = require "myauth.config".load("/app/configs/auth-config.lua")
	local secrets = require "myauth.secrets".load("/app/configs/auth-secrets.lua")
	local event_listener = require "myauth.prometheus-event-listener".new(prometheus)

	myauth = require "myauth".new(config, secrets, event_listener)

}

server {
	listen 80;
	server_name default_server;


	location / {

		access_by_lua_block {

			myauth:authorize()
		}

		proxy_pass http://myauth-lua-test-back-server;
	}

	location /metrics {
	    content_by_lua_block {
	        prometheus:collect()
		}
	}
}